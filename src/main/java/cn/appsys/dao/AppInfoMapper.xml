<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.appsys.dao.AppInfoMapper">
	<select id="getCount" resultType="Integer">
		select count(1) as count from app_info
	</select>
	<!-- 根据多条件获取app信息数量 -->
	<select id="getAppCount" resultType="Integer">
		select count(1) as count from app_info
		<trim prefix="where" prefixOverrides="and | or">
			<if test="devId != null">
				devId = #{devId}
			</if>
			<if test="softwareName != null and softwareName != ''">
				and softwareName like CONCAT('%',#{softwareName},'%')
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="flatformId != null">
				and flatformId = #{flatformId}
			</if>
			<if test="categoryLevel1 != null">
				and categoryLevel1 = #{categoryLevel1}
			</if>
			<if test="categoryLevel2 != null">
				and categoryLevel2 = #{categoryLevel2}
			</if>
			<if test="categoryLevel3 != null">
				and categoryLevel3 = #{categoryLevel3}
			</if>
		</trim>
	</select>

	<!-- 根据多条件分页获取app信息 -->
	<select id="getAppInfoList" resultType="AppInfo">
		select a.id,a.softwareName,a.APKName,a.supportROM,a.softwareSize,a.devid,
		(select devName from dev_user where id = a.devId) as devName,
		a.status,
		(select valueName from data_dictionary d 
				where a.status = d.valueId and d.typeCode = 'APP_STATUS') as statusName,
		a.flatformId,
		(select valueName from data_dictionary d
				where a.flatformId = d.valueId and d.typeCode = 'APP_FLATFORM') as flatformName,
		a.categoryLevel1,
		(select categoryName from app_category c
				where c.id = a.categoryLevel1) as categoryLevel1Name,
		a.categoryLevel2,
		(select categoryName from app_category c
				where c.id = a.categoryLevel2) as categoryLevel2Name,
		a.categoryLevel3,
		(select categoryName from app_category c
				where c.id = a.categoryLevel3) as categoryLevel3Name,
		a.downloads,a.onSaleDate,
		a.versionId,
		(select v.versionNo from app_version v where v.id = a.versionId) as versionNo
		from app_info a
		<trim prefix="where" prefixOverrides="and | or">
			<if test="softwareName != null and softwareName != ''">
				and a.softwareName like CONCAT('%',#{softwareName},'%')
			</if>
			<if test="status != null">
				and a.status = #{status}
			</if>
			<if test="categoryLevel1 != null">
				and a.categoryLevel1 = #{categoryLevel1}
			</if>
			<if test="categoryLevel2 != null">
				and a.categoryLevel2 = #{categoryLevel2}
			</if>
			<if test="categoryLevel3 != null">
				and a.categoryLevel3 = #{categoryLevel3}
			</if>
			<if test="devId != null">
				and a.devId = #{devId}
			</if>
			<if test="flatformId != null">
				and a.flatformId = #{flatformId} 
			</if>
		</trim>
		order by a.creationDate desc
		limit #{currentPageNo},#{pageSize}
	</select>

	<!-- 根据APKName获取信息 -->
	<select id="getAppInfoByAPKName" resultType="Integer">
		SELECT COUNT(1) as count FROM app_info 
		<trim prefix="where" prefixOverrides="and | or">
			<if test="APKName != null and APKName != ''">
				and APKName = #{APKName}
			</if>
		</trim>
	</select>

	<!-- 增加AppInfo -->
	<insert id="addAppInfo" parameterType="AppInfo">
		INSERT INTO app_info(softwareName,APKName,supportROM,interfaceLanguage,
		softwareSize,downloads,flatformId,categoryLevel1,categoryLevel2,categoryLevel3,
		`status`,appInfo,logoLocPath,logoPicPath,devId,createdBy,creationDate) VALUE (#{appInfo.softwareName},#{appInfo.APKName},#{appInfo.supportROM},
		#{appInfo.interfaceLanguage},#{appInfo.softwareSize},#{appInfo.downloads},#{appInfo.flatformId},#{appInfo.categoryLevel1},
		#{appInfo.categoryLevel2},#{appInfo.categoryLevel3},#{appInfo.status},#{appInfo.appInfo},
		#{appInfo.logoLocPath},#{appInfo.logoPicPath},#{appInfo.devId},#{appInfo.createdBy},#{appInfo.creationDate})
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="AppInfo">
		UPDATE app_info SET softwareName = #{appInfo.softwareName},APKName = #{appInfo.APKName},supportROM = #{appInfo.supportROM},
		interfaceLanguage = #{appInfo.interfaceLanguage},softwareSize = #{appInfo.softwareSize},downloads = #{appInfo.downloads},
		flatformId = #{appInfo.flatformId},categoryLevel1 = #{appInfo.categoryLevel1},categoryLevel2 = #{appInfo.categoryLevel2},
		categoryLevel3 = #{appInfo.categoryLevel3},appInfo = #{appInfo.appInfo},logoLocPath = #{appInfo.logoLocPath},
		logoPicPath = #{appInfo.logoPicPath},devId = #{appInfo.devId},onSaleDate = #{appInfo.onSaleDate},offSaleDate = #{appInfo.offSaleDate},
		updateDate = #{appInfo.updateDate},modifyBy = #{appInfo.modifyBy},modifyDate = #{appInfo.modifyDate}
	    WHERE id = #{appInfo.id}
	</update>

	<!-- 根据id获取 -->
	<select id="getAppInfoById" parameterType="Integer" resultType="Appinfo">
		SELECT a.*,
		(SELECT devName FROM dev_user WHERE id = a.devId) AS devName,
		a.status,
		(SELECT valueName FROM data_dictionary d 
				WHERE a.status = d.valueId AND d.typeCode = 'APP_STATUS') AS statusName,
		a.flatformId,
		(SELECT valueName FROM data_dictionary d
				WHERE a.flatformId = d.valueId AND d.typeCode = 'APP_FLATFORM') AS flatformName,
		a.categoryLevel1,
		(SELECT categoryName FROM app_category c
				WHERE c.id = a.categoryLevel1) AS categoryLevel1Name,
		a.categoryLevel2,
		(SELECT categoryName FROM app_category c
				WHERE c.id = a.categoryLevel2) AS categoryLevel2Name,
		a.categoryLevel3,
		(SELECT categoryName FROM app_category c
				WHERE c.id = a.categoryLevel3) AS categoryLevel3Name,
		a.downloads,a.onSaleDate,
		a.versionId,
		(SELECT v.versionNo FROM app_version v WHERE v.id = a.versionId) AS versionNo
		FROM app_info a WHERE a.id = #{id}
	</select>
	<!-- 更新versionid -->
	<update id="updateVersionId">
		update app_info 
			set versionId=#{versionId}
			where id = #{appInfoId}
	</update>
	<!-- 删除 -->
	<delete id="delete" parameterType="Integer">
		delete from app_info where id = #{appInfoId}
	</delete>
</mapper>